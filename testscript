local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Nosch Hub",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Nosch HUB",
   LoadingSubtitle = "by Nosch",
   ShowText = "Rayfield", -- for mobile users to unhide rayfield, change if you'd like
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   ToggleUIKeybind = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:CreateTab("🏠 HOME", nil) -- Title, Image
local Section = MainTab:CreateSection("Main")

Rayfield:Notify({
   Title = "Execution succesed!",
   Content = "Wow, you SIGMA executed the script",
   Duration = 6.5,
   Image = nil,
})

local Button = MainTab:CreateButton({
   Name = "+WalkSpeed",
   Callback = function()
   local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HRP = Character:WaitForChild("HumanoidRootPart")
local Humanoid = Character:WaitForChild("Humanoid")

local SpeedhackEnabled = true
local SpeedMultiplier = 1.3 -- default 

local function getMoveDirection()
    local moveDir = Humanoid.MoveDirection
    if moveDir.Magnitude > 0 then
        return moveDir.Unit
    end
    return nil
end

-- // T to toggle \\ --
UIS.InputBegan:Connect(function(input, gp)
    if gp then return end
    if input.KeyCode == Enum.KeyCode.T then
        SpeedhackEnabled = not SpeedhackEnabled
        speedToggle:Set(SpeedhackEnabled)
    end
end)

-- // Movement \\ --
RunService.RenderStepped:Connect(function(dt)
    if SpeedhackEnabled and Humanoid.MoveDirection.Magnitude > 0 then
        local moveDir = getMoveDirection()
        if moveDir then
            local speed = Humanoid.WalkSpeed * (SpeedMultiplier - 1)
            HRP.CFrame = HRP.CFrame + (moveDir * speed * dt)
        end
    end
end)

-- Auto-Fix on Respawn
LocalPlayer.CharacterAdded:Connect(function(char)
    Character = char
    HRP = char:WaitForChild("HumanoidRootPart")
    Humanoid = char:WaitForChild("Humanoid")
end)

   end,
})

local Button = MainTab:CreateButton({
   Name = "ESP",
   Callback = function()
   local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local function createESP(player)
    local billboardGui = Instance.new("BillboardGui")
    billboardGui.Size = UDim2.new(0, 100, 0, 50)
    billboardGui.Adornee = player.Character and player.Character:FindFirstChild("Head")
    billboardGui.AlwaysOnTop = true

    local textLabel = Instance.new("TextLabel", billboardGui)
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.TextColor3 = Color3.new(1, 0, 0)
    textLabel.TextStrokeTransparency = 0
    textLabel.Text = player.Name
    textLabel.TextScaled = true
    textLabel.Font = Enum.Font.SourceSansBold

    if billboardGui.Adornee then
        billboardGui.Parent = player.Character.Head
    end
end

for _, player in pairs(Players:GetPlayers()) do
    if player.Character and player.Character:FindFirstChild("Head") then
        createESP(player)
    end
end

Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        createESP(player)
    end)
end)


   end,
})
